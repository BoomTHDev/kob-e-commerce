// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

enum StatusUser {
  ACTIVE
  BANNED
}

enum StatusCategory {
  ACTIVE
  DELETED
}

enum StatusProduct {
  ACTIVE
  DELETED
}

model User {
  id        String     @id @default(uuid())
  username  String
  email     String     @unique
  password  String
  imageUrl  String?
  role      Role       @default(USER)
  status    StatusUser @default(ACTIVE)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model Category {
  id        String         @id @default(uuid())
  name      String         @unique
  imageUrl  String?
  imageId   String?
  status    StatusCategory @default(ACTIVE)
  products  Product[]
  createdAt DateTime       @default(now())
  updatedAt DateTime       @updatedAt
}

model Product {
  id          String        @id @default(uuid())
  name        String
  description String?
  price       Int?
  status      StatusProduct @default(ACTIVE)
  quantity    Int           @default(0)
  imageUrl    String?
  imageId     String?
  categoryId  String
  Category    Category      @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
}
